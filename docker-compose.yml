#version: "3.8"

services:
  composer:
    image: composer
    volumes:
      - ./api:/app
    working_dir: /app
    command: >
      bash -c "composer install && composer dump-autoload"

  app:
    build: ./api
    ports:
      - "8080:80"
    volumes:
      - ./api:/var/www/html
    depends_on:
      composer:
        condition: service_completed_successfully
      db:
        condition: service_started
    networks:
      - app-network
    env_file:
      - .env

  db:
    image: mariadb:10.4
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - db-data:/var/lib/mysql
      - ./api/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - "${PMA_PORT}:80"
    environment:
      PMA_HOST: ${DB_HOST}
      PMA_PORT: ${DB_PORT}
      PMA_USER: ${DB_USER}
      PMA_PASSWORD: ${DB_PASSWORD}
      PMA_AUTO_LOGIN: ${PMA_AUTO_LOGIN}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    depends_on:
      - db
    networks:
      - app-network

  frontend:
    build:
      context: ./pokebattle
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./pokebattle:/app:cached
      - /app/node_modules # Excluye node_modules del host, lo mantiene interno al contenedor
    networks:
      - app-network
    env_file:
      - .env

volumes:
  db-data:

networks:
  app-network:
